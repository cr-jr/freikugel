#+TITLE: Environment
#+PROPERTY: header-args :mkdirp yes

* Table of Contents :TOC@4:
- [[#summary][Summary]]
- [[#installation][Installation]]
- [[#plugins][Plugins]]
  - [[#z][z]]
  - [[#fishtape][fishtape]]
  - [[#bass][bass]]
- [[#profile-setup][Profile Setup]]
  - [[#guix][Guix]]
    - [[#1-install-a-dummy-package][1. Install a dummy package]]
    - [[#2-setup-profile-paths][2. Setup profile paths]]
  - [[#nix][Nix]]
    - [[#1-setup-profile][1. Setup profile]]
    - [[#2-add-package-channel][2. Add package channel]]
    - [[#3-install-a-dummy-package][3. Install a dummy package]]
- [[#prompt][Prompt]]
  - [[#1-install][1. Install]]
  - [[#2-initialize][2. Initialize]]
  - [[#3-configure][3. Configure]]

* Summary

#+BEGIN_QUOTE
The system defined in System.org *must be installed* for any of the below configurations to work.
#+END_QUOTE

After my system installation, but before setting up my desktop environment, I need to set up my
shell environment. This means ensuring that my shell is set up correctly, and all the needed
environment variables are defined.

My environment also includes my editor of choice: GNU Emacs. [[https://github.com/cr-jr/C4][I maintain a separate repo]] for that configuration.

* Installation

#+BEGIN_SRC shell
stow -d /path/to/freikugel -t "$HOME" env
#+END_SRC

* Plugins

My shell of choice is Fish. The main thing I do is grab some extra plugins for functionality and a useful prompt. And the easiest way to manage them is [[https://github.com/jorgebucaran/fisher][fisher]].

#+BEGIN_SRC shell
curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher
#+END_SRC

** z

[[https://github.com/jethrokuan/z][z]] fish is a port of a [[https://github.com/rupa/z][ZShell plugin of the same name]]. It allows me to quickly jump to any directory I've visited recently through fuzzy searching.

#+BEGIN_SRC shell
fisher install jethrokuan/z
#+END_SRC

** fishtape

[[https://github.com/jorgebucaran/fishtape][Fishtape]] is a test runner for fish shell. I mainly use it to help me test scripts and ensure that my environment is behaving as it should.

#+BEGIN_SRC shell
fisher install jorgebucaran/fishtape
#+END_SRC

** bass

#+BEGIN_QUOTE
Bass does /not/ export bash variables as universal variables, so the script must be executed within
=config.fish= for its output to carry across sessions.
#+END_QUOTE

[[https://github.com/edc/bass][Bass]] is a POSIX shell compatibility layer for fish. It allows me to use Bash utilities in fish shell without having to port the script. This plugin streamlines necessary environment configurations and variable assignments that otherwise
expect Bash to be the primary shell.

#+BEGIN_SRC shell
fisher install edc/bass
#+END_SRC

* Profile Setup

** Guix

*** 1. Install a dummy package

#+BEGIN_SRC shell
guix install hello; hello
#+END_SRC

*** 2. Setup profile paths

#+BEGIN_SRC shell :tangle env/.config/fish/config.fish
# Setup Guix user environment
set GUIX_PROFILE "$HOME/.guix-profile"
bass source $GUIX_PROFILE/etc/profile
#+END_SRC

** Nix

*** 1. Setup profile

#+BEGIN_SRC shell :tangle env/.config/fish/config.fish
# Setup Nix user environment
bass source /run/current-system/profile/etc/profile.d/nix.sh
#+END_SRC

*** 2. Add package channel

#+BEGIN_SRC shell
nix-channel --add https://nixos.org/channels/nixos-21.05 nixpkgs
nix-channel --update
#+END_SRC

*** 3. Install a dummy package
#+BEGIN_SRC shell
nix-env -i hello;
#+END_SRC

* Prompt

** 1. Install

#+BEGIN_SRC shell
nix-env -i starship
#+END_SRC

** 2. Initialize

#+BEGIN_SRC shell :tangle env/.config/fish/config.fish
# Launch the starship
starship init fish | source
#+END_SRC

** 3. Configure

#+BEGIN_SRC conf-toml :tangle env/.config/starship.toml
add_newline = false

[line_break]
disabled = true

[username]
show_always = true
format = '[$user]($style)@'

[hostname]
ssh_only = false
format = '[$hostname]($style)'

[git_metrics]
disabled = false
#+END_SRC
